{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/detailsUnderFlashcard.js","webpack:///./src/components/flashcard.js","webpack:///./src/components/learnLayout.js"],"names":["alphabet","vowels","concat","consonants","onBottomClick","item","text","word","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","smallText","english","soundsLike","Devanagari","data","seoTitle","showDetails","letterDetails","ClickableText","sx","px","backgroundColor","boxShadow","display","cursor","fontSize","onClick","speakThisHindi","iastEnglishDetails","iast","my","mb","variant","css","ClickableArea","tabIndex","onKeyDown","role","zIndex","height","width","CommonFlashcard","mainText","onTopClick","showSmallText","variantTheme","color","textAlign","WordFlashCard","phrase","render","props","useState","showMore","setShowMore","setShowSmallText","flashCardProps","hindi","single","randomIndex","maxIndex","Math","floor","random","AllView","map","key","SingleView","initialIndex","length","setItem","getNextItem","index","LearnLayout","flashCardView","setFlashCardView","doubleClick","flexDirection","title"],"mappings":"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","file":"component---src-pages-index-js-ecb16c7cf5bca032eb49.js","sourcesContent":["import React from \"react\"\n\nimport vowels from \"../data/vowels.json\"\nimport consonants from \"../data/consonants.json\"\n\nimport { letterDetails } from \"../components/detailsUnderFlashcard\"\nimport LearnLayout from \"../components/learnLayout\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst alphabet = vowels.concat(consonants)\n\nconst onBottomClick = item => speakThisHindi(item.word)\nconst smallText = item => (\n\t<>\n\t\t{item.word} {item.word && item.english && ' - '} {item.english} <br /> {item.soundsLike}\n\t</>\n)\n\nconst Devanagari = () => (\n\t<LearnLayout\n\t\tdata={alphabet}\n\t\tseoTitle={\"Devanagari Vowels\"}\n\t\tshowDetails={letterDetails}\n\t\tsmallText={smallText}\n\t\tonBottomClick={onBottomClick}\n\t/>\n)\n\nexport default Devanagari\n","import React from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableText = ({ text }) => (\n\t<div\n\t\tsx={{\n\t\t\tpx: \"5px\",\n\t\t\tbackgroundColor: \"muted\",\n\t\t\tboxShadow: \"0 0 8px rgba(0, 0, 0, 0.125)\",\n\t\t\tdisplay: \"inline-block\",\n\t\t\tcursor: \"pointer\",\n\t\t\tfontSize: [\"4vw\", \"3vw\", \"2vw\"]\n\t\t}}\n\t\tonClick={() => speakThisHindi(text)}\n\t>\n\t\t{text}\n\t</div>\n)\n\nexport const iastEnglishDetails = ({ english, iast }) => {\n\treturn (\n\t\t<>\n\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t{english}\n\t\t\t</Text>\n\t\t</>\n\t)\n}\n\nexport const letterDetails = ({ english, iast, word, soundsLike }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t\t{(word || english) && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<ClickableText text={word} />\n\t\t\t\t\t\t\t\t{\" - \"}\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tmb={20}\n\t\t\t\t\t\t\t\t\tvariant=\"caps\"\n\t\t\t\t\t\t\t\t\tcss={{ display: \"inline-block\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{english}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{soundsLike && <Text mb={20}>{soundsLike}</Text>}\n\t\t\t\t\t</>\n\t\t\t\t)\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{\n\t\t\tzIndex: 50,\n\t\t\theight: \"50%\",\n\t\t\twidth: \"100%\",\n\t\t\t\"&:hover\": { cursor: \"pointer\" },\n\t\t}}\n\t/>\n)\n\nexport const CommonFlashcard = ({\n\tmainText,\n\tonTopClick,\n\tonBottomClick,\n\tsmallText,\n\tshowSmallText,\n\tvariantTheme = \"flashCard\",\n}) => {\n\treturn (\n\t\t<Card variant={variantTheme}>\n\t\t\t<ClickableArea tabIndex={`top-${mainText}`} onClick={onTopClick} />\n\t\t\t<ClickableArea tabIndex={`bottom-${mainText}`} onClick={onBottomClick} />\n\t\t\t<Text variant={variantTheme}>{mainText}</Text>\n\t\t\t{showSmallText && (\n\t\t\t\t<Text\n\t\t\t\t\tonClick={onBottomClick}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tfontSize: \"smaller\",\n\t\t\t\t\t\tcolor: \"purple\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tbackgroundColor: \"moreMuted\",\n\t\t\t\t\t\tzIndex: 999,\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{smallText}\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t</Card>\n\t)\n}\n\nexport const WordFlashCard = ({\n\titem,\n\tonTopClick = false,\n\tonBottomClick = false,\n\tshowDetails = false,\n\tsmallText = false,\n\tphrase,\n\trender,\n\t...props\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showSmallText, setShowSmallText] = useState(false)\n\n\tconst defaultOnBottomClick = () => {\n\t\tif (props.single) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\tsetShowSmallText(!showSmallText)\n\t\t\tif (onBottomClick) {\n\t\t\t\tonBottomClick(item)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst variant = phrase ? \"phraseFlashCard\" : \"flashCard\"\n\n\tconst flashCardProps = {\n\t\tmainText: item.hindi,\n\t\tonTopClick: onTopClick ? onTopClick : () => speakThisHindi(item.hindi),\n\t\tonBottomClick: defaultOnBottomClick,\n\t\tshowSmallText: showSmallText,\n\t\tsmallText: smallText ? smallText(item) : item.english,\n\t\tvariantTheme: variant,\n\t}\n\n\tif (showDetails) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CommonFlashcard {...flashCardProps} />\n\t\t\t\t{render && render()}\n\t\t\t\t{showMore && showDetails({ ...item })}\n\t\t\t</>\n\t\t)\n\t}\n\treturn <CommonFlashcard {...flashCardProps} />\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport { iastEnglishDetails } from '../components/detailsUnderFlashcard'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst AllView = ({ data, ...props }) => {\n\tconst [showSmallText, setShowSmallText] = useState(false)\n\t\n\tconst wrappedOnBottomClick = item => {\n\t\tif (onBottomClick) {\n\t\t\tonBottomClick(item)\n\t\t}\n\t\tsetShowSmallText(!showSmallText)\n\t}\n\n\treturn data.map(item => (\n\t\t<WordFlashCard\n\t\t\tkey={`${item.hindi}-${Math.random()}`}\n\t\t\titem={item}\n\t\t\t{...props}\n\t\t/>\n\t))\n}\n\nconst SingleView = ({ data, onBottomClick, showDetails, ...props }) => {\n\tconst maxIndex = props.maxIndex || data.length\n\tconst initialIndex = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initialIndex])\n\tconst [showMore, setShowMore] = useState(false)\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\n\tconst wrappedOnBottomClick = item => {\n\t\tif (onBottomClick) {\n\t\t\tonBottomClick(item)\n\t\t}\n\t\tsetShowMore(!showMore)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<WordFlashCard\n\t\t\t\tshowDetails={showDetails || iastEnglishDetails}\n\t\t\t\titem={item}\n\t\t\t\tonBottomClick={wrappedOnBottomClick}\n\t\t\t\t{...props}\n\t\t\t\trender={() => (\n\t\t\t\t\t<Button sx={{ fontSize: \"small\" }} onClick={getNextItem}>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\tsingle\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nconst LearnLayout = ({ seoTitle, ...props}) => {\n\tconst [flashCardView, setFlashCardView] = useState(false)\n\n\tfunction doubleClick() {\n\t\tsetFlashCardView(!flashCardView)\n\t}\n\n\treturn (\n\t\t<Layout\n\t\t\tdoubleClick={doubleClick}\n\t\t\tflexDirection={flashCardView ? \"column\" : \"row\"}\n\t\t>\n\t\t\t<SEO title={seoTitle || \"Learn\"} />\n\t\t\t{flashCardView ? <SingleView {...props} /> : <AllView {...props} />}\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/detailsUnderFlashcard.js","webpack:///./src/pages/helpDirections.js","webpack:///./src/components/flashcard.js","webpack:///./src/components/learnLayout.js"],"names":["ClickableText","text","sx","px","backgroundColor","boxShadow","display","cursor","fontSize","onClick","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","speakThisHindi","iastEnglishDetails","english","iast","my","mb","variant","letterDetails","word","soundsLike","css","HelpDirections","seoTitle","data","helpDirections","phrase","ClickableArea","tabIndex","onKeyDown","role","zIndex","height","width","CommonFlashcard","mainText","onTopClick","onBottomClick","smallText","showSmallText","variantTheme","color","textAlign","WordFlashCard","item","showDetails","render","props","useState","showMore","setShowMore","setShowSmallText","flashCardProps","hindi","single","randomIndex","maxIndex","Math","floor","random","AllView","map","key","SingleView","initialIndex","length","setItem","getNextItem","index","LearnLayout","flashCardView","setFlashCardView","doubleClick","flexDirection","title"],"mappings":"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","file":"component---src-pages-help-directions-js-a39f1400b3499e8d0213.js","sourcesContent":["import React from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableText = ({ text }) => (\n\t<div\n\t\tsx={{\n\t\t\tpx: \"5px\",\n\t\t\tbackgroundColor: \"muted\",\n\t\t\tboxShadow: \"0 0 8px rgba(0, 0, 0, 0.125)\",\n\t\t\tdisplay: \"inline-block\",\n\t\t\tcursor: \"pointer\",\n\t\t\tfontSize: [\"4vw\", \"3vw\", \"2vw\"]\n\t\t}}\n\t\tonClick={() => speakThisHindi(text)}\n\t>\n\t\t{text}\n\t</div>\n)\n\nexport const iastEnglishDetails = ({ english, iast }) => {\n\treturn (\n\t\t<>\n\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t{english}\n\t\t\t</Text>\n\t\t</>\n\t)\n}\n\nexport const letterDetails = ({ english, iast, word, soundsLike }) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t\t{(word || english) && (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<ClickableText text={word} />\n\t\t\t\t\t\t\t\t{\" - \"}\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tmb={20}\n\t\t\t\t\t\t\t\t\tvariant=\"caps\"\n\t\t\t\t\t\t\t\t\tcss={{ display: \"inline-block\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{english}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{soundsLike && <Text mb={20}>{soundsLike}</Text>}\n\t\t\t\t\t</>\n\t\t\t\t)\n","import React from \"react\"\n\nimport LearnLayout from \"../components/learnLayout\"\n\nimport helpDirections from \"../data/helpDirections.json\"\n\nconst HelpDirections = () => {\n\treturn (\n        <LearnLayout\n            seoTitle={\"Help & Directions\"}\n\t\t\tdata={helpDirections}\n\t\t\tphrase\n\t\t/>\n\t)\n}\n\nexport default HelpDirections\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{\n\t\t\tzIndex: 50,\n\t\t\theight: \"50%\",\n\t\t\twidth: \"100%\",\n\t\t\t\"&:hover\": { cursor: \"pointer\" },\n\t\t}}\n\t/>\n)\n\nexport const CommonFlashcard = ({\n\tmainText,\n\tonTopClick,\n\tonBottomClick,\n\tsmallText,\n\tshowSmallText,\n\tvariantTheme = \"flashCard\",\n}) => {\n\treturn (\n\t\t<Card variant={variantTheme}>\n\t\t\t<ClickableArea tabIndex={`top-${mainText}`} onClick={onTopClick} />\n\t\t\t<ClickableArea tabIndex={`bottom-${mainText}`} onClick={onBottomClick} />\n\t\t\t<Text variant={variantTheme}>{mainText}</Text>\n\t\t\t{showSmallText && (\n\t\t\t\t<Text\n\t\t\t\t\tonClick={onBottomClick}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tfontSize: \"smaller\",\n\t\t\t\t\t\tcolor: \"purple\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tbackgroundColor: \"moreMuted\",\n\t\t\t\t\t\tzIndex: 999,\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{smallText}\n\t\t\t\t</Text>\n\t\t\t)}\n\t\t</Card>\n\t)\n}\n\nexport const WordFlashCard = ({\n\titem,\n\tonTopClick = false,\n\tonBottomClick = false,\n\tshowDetails = false,\n\tsmallText = false,\n\tphrase,\n\trender,\n\t...props\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showSmallText, setShowSmallText] = useState(false)\n\n\tconst defaultOnBottomClick = () => {\n\t\tif (props.single) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\tsetShowSmallText(!showSmallText)\n\t\t\tif (onBottomClick) {\n\t\t\t\tonBottomClick(item)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst variant = phrase ? \"phraseFlashCard\" : \"flashCard\"\n\n\tconst flashCardProps = {\n\t\tmainText: item.hindi,\n\t\tonTopClick: onTopClick ? onTopClick : () => speakThisHindi(item.hindi),\n\t\tonBottomClick: defaultOnBottomClick,\n\t\tshowSmallText: showSmallText,\n\t\tsmallText: smallText ? smallText(item) : item.english,\n\t\tvariantTheme: variant,\n\t}\n\n\tif (showDetails) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CommonFlashcard {...flashCardProps} />\n\t\t\t\t{render && render()}\n\t\t\t\t{showMore && showDetails({ ...item })}\n\t\t\t</>\n\t\t)\n\t}\n\treturn <CommonFlashcard {...flashCardProps} />\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport { iastEnglishDetails } from '../components/detailsUnderFlashcard'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst AllView = ({ data, ...props }) => {\n\tconst [showSmallText, setShowSmallText] = useState(false)\n\t\n\tconst wrappedOnBottomClick = item => {\n\t\tif (onBottomClick) {\n\t\t\tonBottomClick(item)\n\t\t}\n\t\tsetShowSmallText(!showSmallText)\n\t}\n\n\treturn data.map(item => (\n\t\t<WordFlashCard\n\t\t\tkey={`${item.hindi}-${Math.random()}`}\n\t\t\titem={item}\n\t\t\t{...props}\n\t\t/>\n\t))\n}\n\nconst SingleView = ({ data, onBottomClick, showDetails, ...props }) => {\n\tconst maxIndex = props.maxIndex || data.length\n\tconst initialIndex = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initialIndex])\n\tconst [showMore, setShowMore] = useState(false)\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\n\tconst wrappedOnBottomClick = item => {\n\t\tif (onBottomClick) {\n\t\t\tonBottomClick(item)\n\t\t}\n\t\tsetShowMore(!showMore)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<WordFlashCard\n\t\t\t\tshowDetails={showDetails || iastEnglishDetails}\n\t\t\t\titem={item}\n\t\t\t\tonBottomClick={wrappedOnBottomClick}\n\t\t\t\t{...props}\n\t\t\t\trender={() => (\n\t\t\t\t\t<Button sx={{ fontSize: \"small\" }} onClick={getNextItem}>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\tsingle\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nconst LearnLayout = ({ seoTitle, ...props}) => {\n\tconst [flashCardView, setFlashCardView] = useState(false)\n\n\tfunction doubleClick() {\n\t\tsetFlashCardView(!flashCardView)\n\t}\n\n\treturn (\n\t\t<Layout\n\t\t\tdoubleClick={doubleClick}\n\t\t\tflexDirection={flashCardView ? \"column\" : \"row\"}\n\t\t>\n\t\t\t<SEO title={seoTitle || \"Learn\"} />\n\t\t\t{flashCardView ? <SingleView {...props} /> : <AllView {...props} />}\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/learn.js","webpack:///./src/components/flashcard.js","webpack:///./src/components/learnLayout.js"],"names":["Learn","seoTitle","data","commonWords","maxIndex","speakThisHindi","text","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","ClickableArea","onClick","tabIndex","onKeyDown","role","sx","zIndex","height","width","cursor","CommonFlashcard","mainText","onTopClick","onBottomClick","smallText","showSmallText","variantTheme","variant","fontSize","color","WordFlashCard","hindi","english","iast","showIastEnglishDetails","showDetails","smallTextKey","phrase","props","useState","showMore","setShowMore","showEnglish","setShowEnglish","flashCardProps","func","key","my","mb","randomIndex","Math","floor","random","AllView","map","item","SingleView","initialIndex","length","setItem","index","LearnLayout","flashCardView","setFlashCardView","doubleClick","flexDirection","title"],"mappings":"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","file":"component---src-pages-learn-js-4bc19b864fd1a41dfa0d.js","sourcesContent":["import React from \"react\"\nimport LearnLayout from \"../components/learnLayout\"\n\nimport commonWords from \"../data/100mostCommonWords.json\"\n\nconst Learn = () => {\n\treturn (\n\t\t<LearnLayout\n\t\t\tseoTitle={\"Common Words\"}\n\t\t\tdata={commonWords}\n\t\t\tmaxIndex={20}\n\t\t/>\n\t)\n}\n\nexport default Learn\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{\n\t\t\tzIndex: 999,\n\t\t\theight: \"50%\",\n\t\t\twidth: \"100%\",\n\t\t\t\"&:hover\": { cursor: \"pointer\" },\n\t\t}}\n\t/>\n)\n\nexport const CommonFlashcard = ({\n\tmainText,\n\tonTopClick,\n\tonBottomClick,\n\tsmallText,\n\tshowSmallText,\n\tvariantTheme = \"flashCard\",\n}) => {\n\treturn (\n\t\t<Card variant={variantTheme}>\n\t\t\t<ClickableArea tabIndex={`top-${mainText}`} onClick={onTopClick} />\n\t\t\t<ClickableArea tabIndex={`bottom-${mainText}`} onClick={onBottomClick} />\n\t\t\t<Text variant={variantTheme}>{mainText}</Text>\n\t\t\t{showSmallText && (\n\t\t\t\t<Text sx={{ fontSize: \"smaller\", color: \"purple\" }}>{smallText}</Text>\n\t\t\t)}\n\t\t</Card>\n\t)\n}\n\nexport const WordFlashCard = ({\n\thindi,\n\tenglish,\n\tiast = false,\n\tonTopClick = false,\n\tonBottomClick = false,\n\tshowIastEnglishDetails = false,\n\tshowDetails = false,\n\tsmallTextKey = false,\n\tphrase,\n\t...props\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showEnglish, setShowEnglish] = useState(false)\n\n\tconst defaultOnBottomClick = () => {\n\t\tif (showIastEnglishDetails) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\t// TODO: should be setSmallText or setUnderText\n\t\t\tsetShowEnglish(!showEnglish)\n\t\t}\n\t}\n\n\tconst variant = phrase ? \"phraseFlashCard\" : \"flashCard\"\n\n\tconst flashCardProps = {\n\t\tmainText: hindi,\n\t\tonTopClick: onTopClick ? onTopClick : () => speakThisHindi(hindi),\n\t\tonBottomClick: onBottomClick\n\t\t\t? () => onBottomClick.func(props[onBottomClick.key])\n\t\t\t: defaultOnBottomClick,\n\t\tshowSmallText: showEnglish,\n\t\tsmallText: props[smallTextKey] || english,\n\t\tvariantTheme: variant,\n\t}\n\n\tif (showDetails) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CommonFlashcard {...flashCardProps} />\n\t\t\t\t{showMore && showDetails}\n\t\t\t</>\n\t\t)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<CommonFlashcard {...flashCardProps} />\n\t\t\t{showMore && (\n\t\t\t\t<>\n\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t\t\t{english}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst AllView = ({ data, ...props }) => {\n\treturn data.map(item => (\n\t\t<WordFlashCard\n\t\t\tkey={`${item.hindi}-${Math.random()}`}\n\t\t\t{...item}\n\t\t\t{...props}\n\t\t/>\n\t))\n}\n\nconst SingleView = ({ data, ...props }) => {\n\tconst maxIndex = props.maxIndex || data.length\n\tconst initialIndex = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initialIndex])\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\t// TODO fix correct detailShowing\n\treturn (\n\t\t<>\n\t\t\t<WordFlashCard showIastEnglishDetails {...item} {...props} />\n\t\t\t<Button sx={{ fontSize: \"small\" }} onClick={getNextItem}>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nconst LearnLayout = props => {\n\tconst [flashCardView, setFlashCardView] = useState(false)\n\n\tfunction doubleClick() {\n\t\tsetFlashCardView(!flashCardView)\n\t}\n\n\treturn (\n\t\t<Layout\n\t\t\tdoubleClick={doubleClick}\n\t\t\tflexDirection={flashCardView ? \"column\" : \"row\"}\n\t\t>\n\t\t\t<SEO title={props.seoTitle || \"Learn\"} />\n\t\t\t{flashCardView ? <SingleView {...props} /> : <AllView {...props} />}\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n"],"sourceRoot":""}
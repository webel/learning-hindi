{"version":3,"sources":["webpack:///./src/pages/learn.js","webpack:///./src/components/learnLayout.js","webpack:///./src/components/flashcard.js"],"names":["first_twenty","commonWords","slice","Learn","data","maxIndex","randomIndex","Math","floor","random","LearnLayout","props","initial_index","useState","item","setItem","flexDirection","showDetails","sx","backgroundColor","fontSize","onClick","index","length","speakThisHindi","text","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","ClickableArea","tabIndex","onKeyDown","role","height","width","WordFlashCard","hindi","english","iast","key","phrase","showMore","setShowMore","showEnglish","setShowEnglish","minWidth","variant","css","position","color","my","mb","Flashcard","letter","word"],"mappings":"80PAAA,wDAKMA,EAAeC,EAAYC,MAAM,EAAG,IAM3BC,UAJD,WACb,OAAO,kBAAC,IAAD,CAAaC,KAAMJ,EAAcK,SAAU,O,oJCDnD,SAASC,EAAYD,GACpB,OAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,GAyBpBK,IAtBK,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAaM,E,oIAAY,wBAC/CC,EAAgBN,EAAYD,GADmB,EAE7BQ,mBAAST,EAAKQ,IAA/BE,EAF8C,KAExCC,EAFwC,KASrD,OACC,YAAC,IAAD,CAAQC,cAAc,UACZ,YAAC,IAAD,iBAAmBF,EAAnB,CAAyBG,aAAW,GAAKN,IAClD,YAAC,IAAD,CACCO,GAAI,CAAEC,gBAAiB,YAAaC,SAAU,SAC9CC,QAViB,WACnB,IAAMC,EAAQhB,EAAYF,EAAKmB,QAC/BR,EAAQX,EAAKkB,MAMZ,W,oCCvBH,mFAIA,SAASE,EAAeC,GACvB,IAAMC,EAAY,IAAIC,yBAAyBF,GAC/CC,EAAUE,KAAO,GACjBF,EAAUG,KAAO,KACjBC,gBAAgBC,MAAML,GAUvB,IAAMM,EAAgB,SAAC,GAAD,IAAGX,EAAH,EAAGA,QAASY,EAAZ,EAAYA,SAAZ,OACrB,mBACCZ,QAASA,EACTa,UAAWb,EACXc,KAAK,SACLF,SAAUA,EACVf,GAAI,CAAEkB,OAAQ,MAAOC,MAAO,YAIjBC,EAAgB,SAAC,GAOvB,IANNC,EAMK,EANLA,MACAC,EAKK,EALLA,QAKK,IAJLC,YAIK,SAHLC,EAGK,EAHLA,IAGK,IAFLzB,mBAEK,SADL0B,EACK,EADLA,OACK,EAC2B9B,oBAAS,GAAlC+B,EADF,KACYC,EADZ,OAEiChC,oBAAS,GAAxCiC,EAFF,KAEeC,EAFf,KAaL,OACC,8BACC,YAAC,IAAD,CAAM7B,GAAI,CAAE8B,SAAUL,GAAU,CAAC,QAAS,QAAS,UAAYM,QAAQ,aACtE,YAACjB,EAAD,CAAeC,SAAUS,EAAKrB,QAAS,kBAAMG,EAAee,MAC5D,YAACP,EAAD,CAAeC,SAAUS,EAAKrB,QAbX,WACjBJ,EACH4B,GAAaD,GAGbG,GAAgBD,MASf,YAAC,IAAD,CAAMI,IAAK,CAAEC,SAAU,YAAcF,QAAQ,aAC3CV,GAEDO,GACA,YAAC,IAAD,CAAM5B,GAAI,CAAEE,SAAU,UAAWgC,MAAO,WAAaZ,IAGtDI,GACA,8BACEH,GAAQ,YAAC,IAAD,CAAMY,GAAI,IAAKZ,GACxB,YAAC,IAAD,CAAMa,GAAI,GAAIL,QAAQ,QACpBT,MAkBQe,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMf,EAAjB,EAAiBA,IAAjB,OACjB,YAAC,IAAD,CAAMO,QAAQ,aACb,YAACjB,EAAD,CAAeC,SAAUS,EAAKrB,QAAS,kBAAMG,EAAegC,MAC5D,YAACxB,EAAD,CAAeC,SAAUS,EAAKrB,QAAS,kBAAMG,EAAeiC,MAC5D,YAAC,IAAD,CAAMP,IAAK,CAAEC,SAAU,YAAcF,QAAQ,aAC3CO","file":"component---src-pages-learn-js-84086b052b8723477daf.js","sourcesContent":["import React from \"react\"\nimport LearnLayout from \"../components/learnLayout\"\n\nimport commonWords from \"../data/100mostCommonWords.json\"\n\nconst first_twenty = commonWords.slice(0, 20)\n\nconst Learn = () => {\n\treturn <LearnLayout data={first_twenty} maxIndex={20} />\n}\n\nexport default Learn\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport Layout from \"../components/layout\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst LearnLayout = ({ data, maxIndex, ...props }) => {\n\tconst initial_index = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initial_index])\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\n\treturn (\n\t\t<Layout flexDirection=\"column\">\n            <WordFlashCard {...item} showDetails {...props } />\n\t\t\t<Button\n\t\t\t\tsx={{ backgroundColor: \"highlight\", fontSize: \"small\" }}\n\t\t\t\tonClick={getNextItem}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{ height: \"50%\", width: \"100% \" }}\n\t/>\n)\n\nexport const WordFlashCard = ({\n\thindi,\n\tenglish,\n\tiast = false,\n\tkey,\n\tshowDetails = false,\n\tphrase,\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showEnglish, setShowEnglish] = useState(false)\n\n\tconst onBottomClick = () => {\n\t\tif (showDetails) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\t// speakThisEnglish(english)\n\t\t\tsetShowEnglish(!showEnglish)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Card sx={{ minWidth: phrase && [\"300px\", \"400px\", \"600px\"] }} variant=\"flashCard\">\n\t\t\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(hindi)} />\n\t\t\t\t<ClickableArea tabIndex={key} onClick={onBottomClick} />\n\t\t\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t\t\t{hindi}\n\t\t\t\t</Text>\n\t\t\t\t{showEnglish && (\n\t\t\t\t\t<Text sx={{ fontSize: \"smaller\", color: \"purple\" }}>{english}</Text>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t\t{showMore && (\n\t\t\t\t<>\n\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t\t\t{english}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n"],"sourceRoot":""}
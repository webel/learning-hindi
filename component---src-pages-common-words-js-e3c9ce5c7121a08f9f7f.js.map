{"version":3,"sources":["webpack:///./src/pages/commonWords.js","webpack:///./src/components/learnLayout.js","webpack:///./src/components/flashcard.js"],"names":["CommonWords","useState","flashCardView","setFlashCardView","doubleClick","seoTitle","data","words","maxIndex","length","title","map","word","key","number","randomIndex","Math","floor","random","LearnLayout","props","initial_index","item","setItem","flexDirection","showDetails","sx","fontSize","onClick","index","speakThisHindi","text","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","ClickableArea","tabIndex","onKeyDown","role","zIndex","height","width","cursor","WordFlashCard","hindi","english","iast","phrase","showMore","setShowMore","showEnglish","setShowEnglish","variant","color","my","mb","Flashcard","letter","css","position"],"mappings":"s7PAuCeA,UA5BK,WAAO,IAAD,EACiBC,oBAAS,GAA5CC,EADkB,KACHC,EADG,KAGzB,SAASC,IACRD,GAAkBD,GAGnB,OAAIA,EAEF,kBAAC,IAAD,CACCE,YAAaA,EACbC,SAAS,SACTC,KAAMC,EACNC,SAAUD,EAAME,SAMlB,kBAAC,IAAD,CAAQL,YAAaA,GACpB,kBAAC,IAAD,CAAKM,MAAM,gCACVH,EAAMI,KAAI,SAAAC,GAAI,OACd,kBAAC,IAAD,eAAeC,IAAKD,EAAKE,QAAYF,U,gKCzBzC,SAASG,EAAYP,GACpB,OAAOQ,KAAKC,MAAMD,KAAKE,SAAWV,GAuBpBW,IApBK,SAAC,GAAkC,IAAhCb,EAA+B,EAA/BA,KAAME,EAAyB,EAAzBA,SAAaY,E,oIAAY,wBAC/CC,EAAgBN,EAAYP,GADmB,EAE7BP,mBAASK,EAAKe,IAA/BC,EAF8C,KAExCC,EAFwC,KASrD,OACC,YAAC,IAAD,CAAQnB,YAAagB,EAAMhB,YAAaoB,cAAc,UACrD,YAAC,IAAD,CAAKd,MAAOU,EAAMf,UAAY,UAC9B,YAAC,IAAD,iBAAmBiB,EAAnB,CAAyBG,aAAW,GAAKL,IACzC,YAAC,IAAD,CAAQM,GAAI,CAAEC,SAAU,SAAWC,QATjB,WACnB,IAAMC,EAAQd,EAAYT,EAAKG,QAC/Bc,EAAQjB,EAAKuB,MAOZ,W,oCCzBH,mFAIA,SAASC,EAAeC,GACvB,IAAMC,EAAY,IAAIC,yBAAyBF,GAC/CC,EAAUE,KAAO,GACjBF,EAAUG,KAAO,KACjBC,gBAAgBC,MAAML,GAUvB,IAAMM,EAAgB,SAAC,GAAD,IAAGV,EAAH,EAAGA,QAASW,EAAZ,EAAYA,SAAZ,OACrB,mBACCX,QAASA,EACTY,UAAWZ,EACXa,KAAK,SACLF,SAAUA,EACVb,GAAI,CAAEgB,OAAQ,IAAKC,OAAQ,MAAOC,MAAO,OAAQ,UAAW,CAAEC,OAAQ,eAI3DC,EAAgB,SAAC,GAOvB,IANNC,EAMK,EANLA,MACAC,EAKK,EALLA,QAKK,IAJLC,YAIK,SAHLpC,EAGK,EAHLA,IAGK,IAFLY,mBAEK,SADLyB,EACK,EADLA,OACK,EAC2BjD,oBAAS,GAAlCkD,EADF,KACYC,EADZ,OAEiCnD,oBAAS,GAAxCoD,EAFF,KAEeC,EAFf,KAaCC,EAAUL,EAAS,kBAAoB,YAE7C,OACC,8BACC,YAAC,IAAD,CAAMK,QAASA,GACd,YAACjB,EAAD,CAAeC,SAAU1B,EAAKe,QAAS,kBAAME,EAAeiB,MAC5D,YAACT,EAAD,CAAeC,SAAU1B,EAAKe,QAfX,WACjBH,EACH2B,GAAaD,GAGbG,GAAgBD,MAWf,YAAC,IAAD,CAAME,QAASA,GACbR,GAEDM,GACA,YAAC,IAAD,CAAM3B,GAAI,CAAEC,SAAU,UAAW6B,MAAO,WAAaR,IAGtDG,GACA,8BACEF,GAAQ,YAAC,IAAD,CAAMQ,GAAI,IAAKR,GACxB,YAAC,IAAD,CAAMS,GAAI,GAAIH,QAAQ,QACpBP,MAkBQW,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQhD,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,IAAjB,OACjB,YAAC,IAAD,CAAM0C,QAAQ,aACb,YAACjB,EAAD,CAAeC,SAAU1B,EAAKe,QAAS,kBAAME,EAAe8B,MAC5D,YAACtB,EAAD,CAAeC,SAAU1B,EAAKe,QAAS,kBAAME,EAAelB,MAC5D,YAAC,IAAD,CAAMiD,IAAK,CAAEC,SAAU,YAAcP,QAAQ,aAC3CK","file":"component---src-pages-common-words-js-e3c9ce5c7121a08f9f7f.js","sourcesContent":["import React, { useState } from \"react\"\n\nimport words from \"../data/100mostCommonWords.json\"\n\nimport Layout from \"../components/layout\"\nimport LearnLayout from \"../components/learnLayout\"\n\nimport SEO from \"../components/seo\"\nimport { WordFlashCard } from \"../components/flashcard\"\n\n\nconst CommonWords = () => {\n\tconst [flashCardView, setFlashCardView] = useState(false)\n\n\tfunction doubleClick() {\n\t\tsetFlashCardView(!flashCardView)\n\t}\n\n\tif (flashCardView) {\n\t\treturn (\n\t\t\t<LearnLayout\n\t\t\t\tdoubleClick={doubleClick}\n\t\t\t\tseoTitle=\"Vowels\"\n\t\t\t\tdata={words}\n\t\t\t\tmaxIndex={words.length}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout doubleClick={doubleClick}>\n\t\t\t<SEO title=\"100 Most Common Hindi Words\" />\n\t\t\t{words.map(word => (\n\t\t\t\t<WordFlashCard key={word.number} {...word} />\n\t\t\t))}\n\t\t</Layout>\n\t)\n}\n\nexport default CommonWords\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst LearnLayout = ({ data, maxIndex, ...props }) => {\n\tconst initial_index = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initial_index])\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\n\treturn (\n\t\t<Layout doubleClick={props.doubleClick} flexDirection=\"column\">\n\t\t\t<SEO title={props.seoTitle || \"Learn\" } />\n\t\t\t<WordFlashCard {...item} showDetails {...props} />\n\t\t\t<Button sx={{ fontSize: \"small\" }} onClick={getNextItem}>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{ zIndex: 999, height: \"50%\", width: \"100%\", \"&:hover\": { cursor: \"pointer\"} }}\n\t/>\n)\n\nexport const WordFlashCard = ({\n\thindi,\n\tenglish,\n\tiast = false,\n\tkey,\n\tshowDetails = false,\n\tphrase,\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showEnglish, setShowEnglish] = useState(false)\n\n\tconst onBottomClick = () => {\n\t\tif (showDetails) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\t// speakThisEnglish(english)\n\t\t\tsetShowEnglish(!showEnglish)\n\t\t}\n\t}\n\n\tconst variant = phrase ? \"phraseFlashCard\" : \"flashCard\"\n\n\treturn (\n\t\t<>\n\t\t\t<Card variant={variant}>\n\t\t\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(hindi)} />\n\t\t\t\t<ClickableArea tabIndex={key} onClick={onBottomClick} />\n\t\t\t\t<Text variant={variant}>\n\t\t\t\t\t{hindi}\n\t\t\t\t</Text>\n\t\t\t\t{showEnglish && (\n\t\t\t\t\t<Text sx={{ fontSize: \"smaller\", color: \"purple\" }}>{english}</Text>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t\t{showMore && (\n\t\t\t\t<>\n\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t\t\t{english}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n"],"sourceRoot":""}
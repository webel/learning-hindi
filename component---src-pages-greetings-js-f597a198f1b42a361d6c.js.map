{"version":3,"sources":["webpack:///./src/pages/greetings.js","webpack:///./src/components/learnLayout.js","webpack:///./src/components/flashcard.js"],"names":["Greetings","data","greetings","maxIndex","length","phrase","randomIndex","Math","floor","random","LearnLayout","props","initial_index","useState","item","setItem","flexDirection","showDetails","sx","fontSize","onClick","index","speakThisHindi","text","utterance","SpeechSynthesisUtterance","rate","lang","speechSynthesis","speak","ClickableArea","tabIndex","onKeyDown","role","height","width","cursor","WordFlashCard","hindi","english","iast","key","showMore","setShowMore","showEnglish","setShowEnglish","variant","color","my","mb","Flashcard","letter","word","css","position"],"mappings":"6FAAA,wDAgBeA,UAVG,WACjB,OACC,kBAAC,IAAD,CACCC,KAAMC,EACNC,SAAUD,EAAUE,OACpBC,QAAM,M,oJCJT,SAASC,EAAYH,GACpB,OAAOI,KAAKC,MAAMD,KAAKE,SAAWN,GAyBpBO,IAtBK,SAAC,GAAkC,IAAhCT,EAA+B,EAA/BA,KAAME,EAAyB,EAAzBA,SAAaQ,E,oIAAY,wBAC/CC,EAAgBN,EAAYH,GADmB,EAE7BU,mBAASZ,EAAKW,IAA/BE,EAF8C,KAExCC,EAFwC,KASrD,OACC,YAAC,IAAD,CAAQC,cAAc,UACZ,YAAC,IAAD,iBAAmBF,EAAnB,CAAyBG,aAAW,GAAKN,IAClD,YAAC,IAAD,CACCO,GAAI,CAAEC,SAAU,SAChBC,QAViB,WACnB,IAAMC,EAAQf,EAAYL,EAAKG,QAC/BW,EAAQd,EAAKoB,MAMZ,W,oCCvBH,mFAIA,SAASC,EAAeC,GACvB,IAAMC,EAAY,IAAIC,yBAAyBF,GAC/CC,EAAUE,KAAO,GACjBF,EAAUG,KAAO,KACjBC,gBAAgBC,MAAML,GAUvB,IAAMM,EAAgB,SAAC,GAAD,IAAGV,EAAH,EAAGA,QAASW,EAAZ,EAAYA,SAAZ,OACrB,mBACCX,QAASA,EACTY,UAAWZ,EACXa,KAAK,SACLF,SAAUA,EACVb,GAAI,CAAEgB,OAAQ,MAAOC,MAAO,OAAQ,UAAW,CAAEC,OAAQ,eAI9CC,EAAgB,SAAC,GAOvB,IANNC,EAMK,EANLA,MACAC,EAKK,EALLA,QAKK,IAJLC,YAIK,SAHLC,EAGK,EAHLA,IAGK,IAFLxB,mBAEK,SADLZ,EACK,EADLA,OACK,EAC2BQ,oBAAS,GAAlC6B,EADF,KACYC,EADZ,OAEiC9B,oBAAS,GAAxC+B,EAFF,KAEeC,EAFf,KAaCC,EAAUzC,EAAS,kBAAoB,YAE7C,OACC,8BACC,YAAC,IAAD,CAAMyC,QAASA,GACd,YAAChB,EAAD,CAAeC,SAAUU,EAAKrB,QAAS,kBAAME,EAAegB,MAC5D,YAACR,EAAD,CAAeC,SAAUU,EAAKrB,QAfX,WACjBH,EACH0B,GAAaD,GAGbG,GAAgBD,MAWf,YAAC,IAAD,CAAME,QAASA,GACbR,GAEDM,GACA,YAAC,IAAD,CAAM1B,GAAI,CAAEC,SAAU,UAAW4B,MAAO,WAAaR,IAGtDG,GACA,8BACEF,GAAQ,YAAC,IAAD,CAAMQ,GAAI,IAAKR,GACxB,YAAC,IAAD,CAAMS,GAAI,GAAIH,QAAQ,QACpBP,MAkBQW,IAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMX,EAAjB,EAAiBA,IAAjB,OACjB,YAAC,IAAD,CAAMK,QAAQ,aACb,YAAChB,EAAD,CAAeC,SAAUU,EAAKrB,QAAS,kBAAME,EAAe6B,MAC5D,YAACrB,EAAD,CAAeC,SAAUU,EAAKrB,QAAS,kBAAME,EAAe8B,MAC5D,YAAC,IAAD,CAAMC,IAAK,CAAEC,SAAU,YAAcR,QAAQ,aAC3CK,M","file":"component---src-pages-greetings-js-f597a198f1b42a361d6c.js","sourcesContent":["import React from \"react\"\n\nimport LearnLayout from \"../components/learnLayout\"\n\nimport greetings from \"../data/greetings.json\"\n\nconst Greetings = () => {\n\treturn (\n\t\t<LearnLayout\n\t\t\tdata={greetings}\n\t\t\tmaxIndex={greetings.length}\n\t\t\tphrase\n\t\t/>\n\t)\n}\n\nexport default Greetings\n","import React, { useState } from \"react\"\n\n/** @jsx jsx */\nimport { Button, Checkbox, Label, jsx } from \"theme-ui\"\nimport { WordFlashCard } from \"../components/flashcard\"\nimport Layout from \"../components/layout\"\n\nfunction randomIndex(maxIndex) {\n\treturn Math.floor(Math.random() * maxIndex)\n}\n\nconst LearnLayout = ({ data, maxIndex, ...props }) => {\n\tconst initial_index = randomIndex(maxIndex)\n\tconst [item, setItem] = useState(data[initial_index])\n\n\tconst getNextItem = () => {\n\t\tconst index = randomIndex(data.length)\n\t\tsetItem(data[index])\n\t}\n\n\treturn (\n\t\t<Layout flexDirection=\"column\">\n            <WordFlashCard {...item} showDetails {...props } />\n\t\t\t<Button\n\t\t\t\tsx={{ fontSize: \"small\" }}\n\t\t\t\tonClick={getNextItem}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</Layout>\n\t)\n}\n\nexport default LearnLayout\n","import React, { useState } from \"react\"\n/** @jsx jsx */\nimport { Card, Text, jsx } from \"theme-ui\"\n\nfunction speakThisHindi(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"hi\"\n\tspeechSynthesis.speak(utterance)\n}\n\nfunction speakThisEnglish(text) {\n\tconst utterance = new SpeechSynthesisUtterance(text)\n\tutterance.rate = 0.5\n\tutterance.lang = \"en\"\n\tspeechSynthesis.speak(utterance)\n}\n\nconst ClickableArea = ({ onClick, tabIndex }) => (\n\t<div\n\t\tonClick={onClick}\n\t\tonKeyDown={onClick}\n\t\trole=\"button\"\n\t\ttabIndex={tabIndex}\n\t\tsx={{ height: \"50%\", width: \"100%\", \"&:hover\": { cursor: \"pointer\"} }}\n\t/>\n)\n\nexport const WordFlashCard = ({\n\thindi,\n\tenglish,\n\tiast = false,\n\tkey,\n\tshowDetails = false,\n\tphrase,\n}) => {\n\tconst [showMore, setShowMore] = useState(false)\n\tconst [showEnglish, setShowEnglish] = useState(false)\n\n\tconst onBottomClick = () => {\n\t\tif (showDetails) {\n\t\t\tsetShowMore(!showMore)\n\t\t} else {\n\t\t\t// speakThisEnglish(english)\n\t\t\tsetShowEnglish(!showEnglish)\n\t\t}\n\t}\n\n\tconst variant = phrase ? \"phraseFlashCard\" : \"flashCard\"\n\n\treturn (\n\t\t<>\n\t\t\t<Card variant={variant}>\n\t\t\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(hindi)} />\n\t\t\t\t<ClickableArea tabIndex={key} onClick={onBottomClick} />\n\t\t\t\t<Text variant={variant}>\n\t\t\t\t\t{hindi}\n\t\t\t\t</Text>\n\t\t\t\t{showEnglish && (\n\t\t\t\t\t<Text sx={{ fontSize: \"smaller\", color: \"purple\" }}>{english}</Text>\n\t\t\t\t)}\n\t\t\t</Card>\n\t\t\t{showMore && (\n\t\t\t\t<>\n\t\t\t\t\t{iast && <Text my={20}>{iast}</Text>}\n\t\t\t\t\t<Text mb={20} variant=\"caps\">\n\t\t\t\t\t\t{english}\n\t\t\t\t\t</Text>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nconst Flashcard = ({ letter, word, key }) => (\n\t<Card variant=\"flashCard\">\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(letter)} />\n\t\t<ClickableArea tabIndex={key} onClick={() => speakThisHindi(word)} />\n\t\t<Text css={{ position: \"absolute\" }} variant=\"flashCard\">\n\t\t\t{letter}\n\t\t</Text>\n\t</Card>\n)\n\nexport default Flashcard\n"],"sourceRoot":""}